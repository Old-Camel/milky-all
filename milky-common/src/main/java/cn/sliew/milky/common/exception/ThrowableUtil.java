package cn.sliew.milky.common.exception;

import java.io.*;

import static cn.sliew.milky.common.check.Ensures.checkNotNull;
import static cn.sliew.milky.common.exception.Rethrower.throwAs;

public final class ThrowableUtil {

    /**
     * Gets the stack trace from a Throwable as a String.
     *
     * @param cause the {@link Throwable} to be examined
     * @return the stack trace as generated by {@link Throwable#printStackTrace(java.io.PrintWriter)} method.
     */
    public static String formatThrowableStackTrace(Throwable cause) {
        try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {
            PrintStream pout = new PrintStream(out);
            cause.printStackTrace(pout);
            pout.flush();
            return new String(out.toByteArray());
        } catch (IOException ignore) {
            // ignore as should never happen, so just rethrow.
            throwAs(ignore);
            return null;
        }
    }

    /**
     * Read the stacktrace of the supplied {@link Throwable} into a String.
     */
    public static String readStackTrace(Throwable throwable) {
        checkNotNull(throwable, () -> "Throwable must not be null");

        StringWriter stringWriter = new StringWriter();
        try (PrintWriter printWriter = new PrintWriter(stringWriter)) {
            throwable.printStackTrace(printWriter);
        }
        return stringWriter.toString();
    }



    private ThrowableUtil() {
        throw new IllegalStateException("no instance");
    }
}
